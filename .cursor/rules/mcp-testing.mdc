---
description:
globs:
alwaysApply: false
---
# MCP Testing Framework Guide

## Test Structure
The MCP testing framework is organized into several key components:

1. Test Runner: [tests/run-tests.php](mdc:tests/run-tests.php)
   - Manages test execution
   - Handles environment setup
   - Provides self-healing capabilities
   - Generates test reports

2. Configuration: [tests/phpunit.xml](mdc:tests/phpunit.xml)
   - Defines test suites
   - Configures coverage reporting
   - Sets environment variables
   - Manages test execution settings

3. Remote Services: [tests/config/remote-services.php](mdc:tests/config/remote-services.php)
   - Configures remote service connections
   - Manages service credentials
   - Defines retry and timeout settings
   - Handles logging configuration

4. Integration Tests: [tests/MCP/Integration/RemoteServiceTest.php](mdc:tests/MCP/Integration/RemoteServiceTest.php)
   - Tests remote service connections
   - Verifies service health
   - Tests error handling
   - Validates service resilience

## Best Practices

1. Service Testing
   - Always use remote services instead of mocks
   - Implement health checks before tests
   - Handle connection failures gracefully
   - Clean up resources after tests

2. Error Handling
   - Log all errors with context
   - Implement retry mechanisms
   - Clean up failed test data
   - Report detailed error information

3. Test Organization
   - Group tests by service type
   - Use descriptive test names
   - Document test requirements
   - Maintain test isolation

4. Self-Healing
   - Automatically create required directories
   - Load missing environment variables
   - Retry failed service connections
   - Clean up stale test data

## Environment Setup

Required environment variables:
```
MCP_API_KEY=your_api_key
CODESPACES_DB_HOST=your_db_host
CODESPACES_DB_USERNAME=your_db_username
CODESPACES_DB_PASSWORD=your_db_password
CODESPACES_REDIS_HOST=your_redis_host
CODESPACES_REDIS_PASSWORD=your_redis_password
CODESPACES_MAIL_HOST=your_mail_host
CODESPACES_MAIL_USERNAME=your_mail_username
CODESPACES_MAIL_PASSWORD=your_mail_password
```

## Running Tests

1. Basic test execution:
```bash
php tests/run-tests.php
```

2. Specific test suite:
```bash
php vendor/bin/phpunit tests/MCP/Integration
```

3. Individual test:
```bash
php vendor/bin/phpunit tests/MCP/Integration/RemoteServiceTest.php
```

## Test Reports

Test reports are generated in:
- JSON format: `storage/logs/tests/test_report_*.json`
- Coverage reports: `.coverage/html/`
- Error logs: `.errors/`
- Failure logs: `.failures/`

## Troubleshooting

1. Service Connection Issues
   - Check environment variables
   - Verify service health
   - Check network connectivity
   - Review service logs

2. Test Failures
   - Check test logs
   - Review error reports
   - Verify test data
   - Check service status

3. Performance Issues
   - Monitor service response times
   - Check resource usage
   - Review concurrent test execution
   - Optimize test data setup

