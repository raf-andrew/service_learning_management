---
description:
globs:
alwaysApply: false
---
# Codespaces Workflow Guide

## Available Commands

The system provides several Artisan commands for managing Codespaces:

```bash
php artisan codespace:create --name=my-codespace
php artisan codespace:list
php artisan codespace:connect --name=my-codespace
php artisan codespace:rebuild --name=my-codespace
php artisan codespace:delete --name=my-codespace
```

## API Endpoints

Codespace management is available through these API endpoints:

- `GET /api/codespaces`: List all codespaces
- `POST /api/codespaces`: Create a new codespace
- `DELETE /api/codespaces/{name}`: Delete a codespace
- `POST /api/codespaces/{name}/rebuild`: Rebuild a codespace
- `GET /api/codespaces/{name}/status`: Get codespace status
- `POST /api/codespaces/{name}/connect`: Connect to a codespace

## Configuration

Codespace settings are managed in [config/codespaces.php](mdc:config/codespaces.php) and include:

- Repository configuration
- Region settings
- Machine type selection
- Security settings
- Feature flags

## Development Container

The development container configuration is defined in:

- [.devcontainer/devcontainer.json](mdc:.devcontainer/devcontainer.json)
- [.devcontainer/Dockerfile](mdc:.devcontainer/Dockerfile)

These files configure the development environment, including:
- PHP version and extensions
- VS Code extensions
- Post-create commands
- Docker settings
