---
description:
globs:
alwaysApply: false
---
# API Documentation

## Health Check API

### GET /health
Health check endpoint for service status.

**Response Format:**
```json
{
    "status": "healthy",
    "timestamp": "2024-03-09T12:00:00Z",
    "services": {
        "database": "up",
        "cache": "up",
        "queue": "up"
    }
}
```

### GET /metrics
Retrieve system metrics.

**Response Format:**
```json
{
    "cpu_usage": 45.2,
    "memory_usage": 1024,
    "disk_usage": 5120,
    "timestamp": "2024-03-09T12:00:00Z"
}
```

## Deployment API

### POST /deploy
Deploy a new version.

**Request Format:**
```json
{
    "version": "1.0.0",
    "environment": "production",
    "config": {
        "rollback_enabled": true,
        "notify_on_failure": true
    }
}
```

### POST /rollback
Rollback to previous version.

**Request Format:**
```json
{
    "version": "0.9.0",
    "environment": "production",
    "reason": "Critical bug found"
}
```

## Agent API

### POST /agents/register
Register a new agent.

**Request Format:**
```json
{
    "name": "service-health-agent",
    "type": "health",
    "config": {
        "check_interval": 60,
        "alert_threshold": 80
    }
}
```

### GET /agents
List all registered agents.

**Response Format:**
```json
{
    "agents": [
        {
            "id": "agent-1",
            "name": "service-health-agent",
            "type": "health",
            "status": "active"
        }
    ]
}
```

## Security API

### POST /auth/login
Authenticate user.

**Request Format:**
```json
{
    "username": "user@example.com",
    "password": "password"
}
```

**Response Format:**
```json
{
    "token": "jwt-token",
    "expires_in": 3600,
    "user": {
        "id": 1,
        "name": "John Doe",
        "role": "admin"
    }
}
```

## Error Responses
All endpoints return errors in the following format:

```json
{
    "error": {
        "code": "ERROR_CODE",
        "message": "Error description",
        "details": {}
    }
}
```

## Authentication
- All endpoints require JWT authentication
- Include token in Authorization header:
  ```
  Authorization: Bearer <token>
  ```

## Rate Limiting
- 100 requests per minute per IP
- 1000 requests per hour per user
- Rate limit headers included in response
