openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API documentation for the Product model

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the product
        name:
          type: string
          description: Product name
          minLength: 1
          maxLength: 255
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          description: Product price
          minimum: 0
        stock:
          type: integer
          description: Available stock quantity
          minimum: 0
        category_id:
          type: integer
          description: ID of the associated category
        status:
          type: string
          enum: [draft, active, out_of_stock]
          description: Product status
        metadata:
          type: object
          description: Additional product metadata
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true
        is_in_stock:
          type: boolean
          description: Whether the product is in stock
        formatted_price:
          type: string
          description: Formatted price with currency symbol
        average_rating:
          type: number
          format: float
          description: Average rating from reviews
      required:
        - name
        - price
        - category_id

paths:
  /api/products:
    get:
      summary: List products
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, out_of_stock]
        - name: min_price
          in: query
          schema:
            type: number
        - name: max_price
          in: query
          schema:
            type: number
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    
    post:
      summary: Create a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/products/{id}:
    get:
      summary: Get product details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    
    put:
      summary: Update product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    
    delete:
      summary: Delete product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted 