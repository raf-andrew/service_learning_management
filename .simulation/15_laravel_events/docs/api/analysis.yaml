openapi: 3.0.0
info:
  title: Laravel Code Analysis API
  description: API documentation for the code analysis system
  version: 1.0.0
  contact:
    name: System
    email: system@example.com

tags:
  - name: Analysis
    description: Code quality analysis system

paths:
  /api/analysis:
    post:
      tags:
        - Analysis
      summary: Analyze code quality
      description: Analyzes code quality for a given directory
      operationId: analyzeCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '200':
          description: Successful analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AnalysisRequest:
      type: object
      required:
        - target_path
      properties:
        target_path:
          type: string
          format: path
          description: Path to the directory to analyze
        include_metrics:
          type: boolean
          default: true
          description: Whether to include metrics in the analysis
        include_suggestions:
          type: boolean
          default: true
          description: Whether to include suggestions in the analysis

    AnalysisResponse:
      type: object
      required:
        - timestamp
        - target_path
        - classes
      properties:
        timestamp:
          type: string
          format: date-time
          description: Analysis timestamp
        target_path:
          type: string
          format: path
          description: Analyzed directory path
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassAnalysis'
        metrics:
          $ref: '#/components/schemas/AnalysisMetrics'
        suggestions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Suggestion'

    ClassAnalysis:
      type: object
      required:
        - name
        - file
        - metrics
        - methods
        - properties
        - docblock
      properties:
        name:
          type: string
          description: Class name
        file:
          type: string
          format: path
          description: File path
        metrics:
          $ref: '#/components/schemas/ClassMetrics'
        methods:
          type: array
          items:
            $ref: '#/components/schemas/MethodAnalysis'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyAnalysis'
        docblock:
          $ref: '#/components/schemas/DocblockAnalysis'

    ClassMetrics:
      type: object
      required:
        - lines_of_code
        - method_count
        - property_count
        - constant_count
        - trait_count
        - interface_count
        - inheritance_depth
        - complexity
      properties:
        lines_of_code:
          type: integer
          minimum: 0
          description: Number of lines of code
        method_count:
          type: integer
          minimum: 0
          description: Number of methods
        property_count:
          type: integer
          minimum: 0
          description: Number of properties
        constant_count:
          type: integer
          minimum: 0
          description: Number of constants
        trait_count:
          type: integer
          minimum: 0
          description: Number of traits
        interface_count:
          type: integer
          minimum: 0
          description: Number of interfaces
        inheritance_depth:
          type: integer
          minimum: 0
          description: Inheritance depth
        complexity:
          type: integer
          minimum: 0
          description: Cyclomatic complexity

    MethodAnalysis:
      type: object
      required:
        - name
        - visibility
        - parameters
        - return_type
        - docblock
        - complexity
        - lines_of_code
      properties:
        name:
          type: string
          description: Method name
        visibility:
          type: string
          enum: [public, protected, private]
          description: Method visibility
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterAnalysis'
        return_type:
          type: string
          description: Return type
        docblock:
          type: string
          description: Method documentation
        complexity:
          type: integer
          minimum: 0
          description: Method complexity
        lines_of_code:
          type: integer
          minimum: 0
          description: Number of lines of code

    PropertyAnalysis:
      type: object
      required:
        - name
        - visibility
        - type
        - docblock
        - has_default
      properties:
        name:
          type: string
          description: Property name
        visibility:
          type: string
          enum: [public, protected, private]
          description: Property visibility
        type:
          type: string
          description: Property type
        docblock:
          type: string
          description: Property documentation
        has_default:
          type: boolean
          description: Whether the property has a default value

    ParameterAnalysis:
      type: object
      required:
        - name
        - type
        - has_default
        - is_optional
      properties:
        name:
          type: string
          description: Parameter name
        type:
          type: string
          description: Parameter type
        has_default:
          type: boolean
          description: Whether the parameter has a default value
        is_optional:
          type: boolean
          description: Whether the parameter is optional

    DocblockAnalysis:
      type: object
      required:
        - has_docblock
        - has_description
        - has_params
        - has_return
        - has_throws
        - has_see
        - has_since
        - has_author
      properties:
        has_docblock:
          type: boolean
          description: Whether the element has documentation
        has_description:
          type: boolean
          description: Whether the documentation has a description
        has_params:
          type: boolean
          description: Whether the documentation has parameters
        has_return:
          type: boolean
          description: Whether the documentation has return type
        has_throws:
          type: boolean
          description: Whether the documentation has throws
        has_see:
          type: boolean
          description: Whether the documentation has see references
        has_since:
          type: boolean
          description: Whether the documentation has since version
        has_author:
          type: boolean
          description: Whether the documentation has author

    AnalysisMetrics:
      type: object
      required:
        - total_classes
        - total_methods
        - total_properties
        - total_lines_of_code
        - average_complexity
        - average_methods_per_class
        - average_properties_per_class
        - average_lines_per_class
      properties:
        total_classes:
          type: integer
          minimum: 0
          description: Total number of classes
        total_methods:
          type: integer
          minimum: 0
          description: Total number of methods
        total_properties:
          type: integer
          minimum: 0
          description: Total number of properties
        total_lines_of_code:
          type: integer
          minimum: 0
          description: Total lines of code
        average_complexity:
          type: number
          format: float
          minimum: 0
          description: Average complexity
        average_methods_per_class:
          type: number
          format: float
          minimum: 0
          description: Average methods per class
        average_properties_per_class:
          type: number
          format: float
          minimum: 0
          description: Average properties per class
        average_lines_per_class:
          type: number
          format: float
          minimum: 0
          description: Average lines per class

    Suggestion:
      type: object
      required:
        - type
        - message
        - severity
      properties:
        type:
          type: string
          description: Suggestion type
        message:
          type: string
          description: Suggestion message
        severity:
          type: string
          enum: [info, warning, error]
          description: Suggestion severity

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code 