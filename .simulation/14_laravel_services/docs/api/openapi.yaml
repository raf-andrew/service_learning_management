openapi: 3.0.0
info:
  title: Service Learning Management API
  description: API documentation for the Service Learning Management platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@servicelearning.com

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server
  - url: https://api.servicelearning.com/v1
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [student, instructor, admin]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        instructor_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        course_id:
          type: integer
          format: int64
        amount:
          type: number
          format: float
        status:
          type: string
          enum: [pending, completed, failed, refunded]
        payment_method:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        type:
          type: string
        message:
          type: string
        read:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

paths:
  /users:
    get:
      summary: List users
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total:
                        type: integer
                      per_page:
                        type: integer

    post:
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                role:
                  type: string
                  enum: [student, instructor, admin]
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [student, instructor, admin]
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /courses:
    get:
      summary: List courses
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total:
                        type: integer
                      per_page:
                        type: integer

    post:
      summary: Create course
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - price
                - instructor_id
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                instructor_id:
                  type: integer
      responses:
        '201':
          description: Course created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{id}:
    get:
      summary: Get course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

    put:
      summary: Update course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        '200':
          description: Course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

    delete:
      summary: Delete course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted

  /payments:
    post:
      summary: Process payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - course_id
                - amount
                - payment_method
              properties:
                user_id:
                  type: integer
                course_id:
                  type: integer
                amount:
                  type: number
                  format: float
                payment_method:
                  type: string
      responses:
        '201':
          description: Payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'

  /notifications:
    get:
      summary: List notifications
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total:
                        type: integer
                      per_page:
                        type: integer

    post:
      summary: Send notification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - type
                - message
              properties:
                user_id:
                  type: integer
                type:
                  type: string
                message:
                  type: string
      responses:
        '201':
          description: Notification sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification' 