@startuml LMS Services

' Services
package "Core Services" {
  class UserService {
    +authenticate()
    +authorize()
    +manageProfile()
    +handleSocial()
    +manageRoles()
  }

  class CourseService {
    +manageCourses()
    +organizeContent()
    +manageCategories()
    +searchCourses()
    +trackAnalytics()
  }

  class ContentService {
    +manageLessons()
    +manageSections()
    +handleMedia()
    +deliverContent()
    +trackProgress()
  }

  class PaymentService {
    +processPayments()
    +integrateGateways()
    +manageSubscriptions()
    +handleRefunds()
    +trackRevenue()
  }
}

package "API Layer" {
  class RESTAPI {
    +handleRequests()
    +authenticate()
    +rateLimit()
    +version()
  }

  class GraphQLAPI {
    +resolveQueries()
    +handleMutations()
    +cacheResults()
  }

  class WebSocketAPI {
    +handleConnections()
    +sendUpdates()
    +manageSessions()
  }
}

package "Frontend" {
  class VueComponents {
    +renderUI()
    +handleEvents()
    +manageState()
  }

  class PiniaStores {
    +manageState()
    +handleActions()
    +cacheData()
  }
}

' Relationships
UserService --> RESTAPI : exposes
UserService --> GraphQLAPI : exposes
UserService --> WebSocketAPI : exposes

CourseService --> RESTAPI : exposes
CourseService --> GraphQLAPI : exposes
CourseService --> WebSocketAPI : exposes

ContentService --> RESTAPI : exposes
ContentService --> GraphQLAPI : exposes
ContentService --> WebSocketAPI : exposes

PaymentService --> RESTAPI : exposes
PaymentService --> GraphQLAPI : exposes
PaymentService --> WebSocketAPI : exposes

RESTAPI --> VueComponents : serves
GraphQLAPI --> VueComponents : serves
WebSocketAPI --> VueComponents : serves

VueComponents --> PiniaStores : uses

@enduml 